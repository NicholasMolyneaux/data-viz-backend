# Sets the maximum file size that can be uploaded to 1g.
# https://www.playframework.com/documentation/2.6.x/ScalaBodyParsers#Max-content-length
play.http.parser.maxMemoryBuffer=1g

# For upload large file
# https://www.playframework.com/documentation/2.6.x/ScalaBodyParsers#Max-content-length
play.http.parser.maxDiskBuffer=2g


# Configuration for accessing database
slick.dbs.default {
  profile = "models.MyPGProfile$"//slick.driver.PostgresDriver$"
  db = {
    profile = "org.postgresql.Driver"
    url = "jdbc:postgresql://localhost:5432/postgres"
    user = postgres
    password = "DataVizDev"
  }
  queueSize = 100000
}

# db connections = ((physical_core_count * 2) + effective_spindle_count)
fixedConnectionPool = 2

# uses custom execution context for DB
database.dispatcher {
  executor = "thread-pool-executor"
  throughput = 1
  thread-pool-executor {
    fixed-pool-size = ${fixedConnectionPool}
  }
}

repository.dispatcher {
  executor = "thread-pool-executor"
  throughput = 1
  thread-pool-executor {
    fixed-pool-size = ${fixedConnectionPool}
  }
}

// starts scheduler on server start
play.modules.enabled += "processing.JobModule"

data.upload.path="/home/nicholas/data/uploaded/"
data.processed.path="/home/nicholas/data/processed/"
data.pgsqlimport="/home/nicholas/data/processed/"

data.uploadkey.infra = "test"
data.uploadkey.traj= "test"

play.filters.enabled += "play.filters.cors.CORSFilter"
play.filters.cors {
  enabled = true
  allowedOrigins = null
  allowedHttpHeaders = null
  allowedHttpMethods = null
  pathPrefixes = ["/"]
}